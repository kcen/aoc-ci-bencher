resources:
  - name: mattcl
    type: git
    icon: github
    source:
      uri: https://github.com/mattcl/aoc2021.git
  - name: lanjian
    type: git
    icon: github
    source:
      uri: https://github.com/LanJian/aoc-2021.git
  - name: nathanwang2
    type: git
    icon: github
    source:
      uri: https://github.com/NathanWang2/adventOfCode2021.git
  - name: ci
    type: git
    icon: github
    source:
      uri: https://github.com/mattcl/aoc-ci-bencher.git
  - name: aoc-inputs
    type: git
    icon: github
    source:
      uri: git@github.com:mattcl/aoc-aggregated-inputs.git
      branch: master
      private_key: ((aoc-inputs.deploy_key))

jobs:
  - name: collect-inputs
    public: true
    serial_groups: [collection]
    build_log_retention:
      builds: 50
    plan:
      - in_parallel:
        - get: ci
          trigger: false
        - get: aoc-inputs
          trigger: false
        - get: mattcl
          trigger: true
        - get: lanjian
          trigger: true
        - get: nathanwang2
          trigger: true
      - task: collect
        file: ci/tasks/collect-inputs.yml
      - put: aoc-inputs
        params: {repository: modified-aoc-inputs}

  - name: mattcl
    public: true
    serial_groups: [benches]
    build_log_retention:
      builds: 50
    plan:
      - get: ci
        trigger: false
      - get: repo
        resource: mattcl
        trigger: true
        passed:
          - collect-inputs
      - task: run-all
        file: ci/tasks/generic-rust.yml

  - name: lanjian
    public: true
    serial_groups: [benches]
    build_log_retention:
      builds: 50
    plan:
      - get: ci
        trigger: false
      - get: repo
        resource: lanjian
        trigger: true
        passed:
          - collect-inputs
      - task: run-all
        file: ci/tasks/generic-rust.yml

  - name: nathanwang2
    public: true
    serial_groups: [benches]
    build_log_retention:
      builds: 50
    plan:
      - get: ci
        trigger: false
      - get: repo
        resource: nathanwang2
        trigger: true
        passed:
          - collect-inputs
      - task: run-all
        file: ci/tasks/generic-python.yml
        vars:
          script: ci/scripts/nw-python

  - name: solve-inputs
    public: true
    serial_groups: [solving, benches]
    build_log_retention:
      builds: 50
    plan:
      - in_parallel:
        - get: ci
          trigger: false
        - get: aoc-inputs
          trigger: true
          passed:
            - collect-inputs
        - get: mattcl
          trigger: true
          passed:
            - mattcl
      # this is repeated from the subsequent application-bench job, but, again,
      # I didn't want to manage releases or something. With the cache the
      # overhead isn't as bad as it could be.
      - task: extract-mattcl-rust-examples
        file: ci/tasks/extract-examples.yml
        vars:
          archive-name: aoc2021-mattcl.tar.gz
        input_mapping:
          repo: mattcl
      - task: solve
        file: ci/tasks/solve-inputs.yml
      - put: aoc-inputs
        params: {repository: modified-aoc-inputs}

  - name: application-bench
    public: true
    serial_groups: [collection, solving, benches]
    build_log_retention:
      builds: 50
    plan:
      - in_parallel:
        - get: ci
          trigger: false
        - get: aoc-inputs
          trigger: false
          passed:
            - solve-inputs
        - get: mattcl
          trigger: true
          passed:
            - mattcl
        - get: lanjian
          trigger: true
          passed:
            - lanjian
        - get: nathanwang2
          trigger: true
          passed:
            - nathanwang2
      # So yeah. This isn't ideal, but because I don't want to deal with setting
      # up proper artifact storage, let's just rebuild these things here
      - in_parallel:
        - task: extract-mattcl-rust-examples
          file: ci/tasks/extract-examples.yml
          vars:
            archive-name: aoc2021-mattcl.tar.gz
          input_mapping:
            repo: mattcl
          output_mapping:
            examples: mattcl-examples

        - task: extract-lanjian-rust-examples
          file: ci/tasks/extract-examples.yml
          vars:
            archive-name: aoc-2021-lanjian.tar.gz
          input_mapping:
            repo: lanjian
          output_mapping:
            examples: lanjian-examples

      - task: application-benchmarks
        file: ci/tasks/application-benchmarks.yml
      - put: aoc-inputs
        params: {repository: modified-aoc-inputs}

