#!/bin/bash
set -e

CUR=$(pwd)
HYPERFINE="${CUR}/ci/tools/hyperfine/hyperfine"
INPUTS="${CUR}/aoc-inputs/2021"

echo "unpacking mattcl examples"
tar -xvf mattcl-examples/aoc2021-mattcl.tar.gz
mv aoc2021-mattcl mattcl

# inputs look like
# aoc-inputs/year/day/files
i=1
while [ $i -ne 26 ]
do
  padded=`printf %03d $i`
  input_dir="${INPUTS}/day_${padded}"

  if [ ! -d "${input_dir}" ]; then
    echo "no inputs for day ${i}, breaking"
    break
  fi

  input_list=$(find "${input_dir}" -name "input-*" -exec basename {} \; | xargs | sed 's/ /,/g')
  echo "detected the following inputs for day ${i}: ${input_list}"

  var_prefix="AOC_INPUT=${input_dir}"

  cmd=(
    $HYPERFINE
    -w 3
    -L fname $input_list
    --export-markdown "bench-${padded}.md"
  )
  # get the list of "executables"
  mattcl_candidate=$(find mattcl -name "${padded}_*")
  # if [ ! -z $mattcl_candidate ]; then
  #   cmd+=(-n "day_${padded}-mattcl-with({fname})")
  # fi

  nathanwang2_candidate=$(find nathanwang2 -maxdepth 1 -type d -name "day${i}")
  # if [ ! -z $nathanwang2_candidate ]; then
  #   cmd+=(-n "day_${padded}-nathanwang2-with({fname})")
  # fi

  # order is important for these. They must be in the same order as the command
  # names were
  if [ ! -z $mattcl_candidate ]; then
    cmd+=("${var_prefix}/{fname} ${mattcl_candidate}")
  fi

  if [ ! -z $nathanwang2_candidate ]; then
    # for now, just run the example they have, but later we need to parametrize
    # but this requires work from the repo owner
    cmd+=("${var_prefix}/{fname} cd ${nathanwang2_candidate} && python *.py")
  fi

  declare -p cmd

  echo "Benching day ${i}"
  "${cmd[@]}"

  i=`expr $i + 1`
done
