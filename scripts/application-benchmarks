#!/bin/bash
set -e

CUR=$(pwd)
HYPERFINE="${CUR}/ci/tools/hyperfine/hyperfine"
INPUTS="${CUR}/aoc-inputs/2021"

# make the working repo
git clone aoc-inputs modified-aoc-inputs

echo "unpacking mattcl examples"
tar -xvf mattcl-examples/aoc2021-mattcl.tar.gz
mv aoc2021-mattcl mattcl

# inputs look like
# aoc-inputs/year/day/files
i=1
while [ $i -ne 26 ]
do
  echo ""
  echo "--- Preparing environment for day ${i} ---"

  padded=`printf %03d $i`
  input_dir="${INPUTS}/day_${padded}"

  if [ ! -d "${input_dir}" ]; then
    echo "no inputs for day ${i}, breaking"
    break
  fi

  input_list=$(find "${input_dir}" -name "input-*" -exec basename {} \; | xargs | sed 's/ /,/g')
  echo "detected the following inputs for day ${i}: ${input_list}"

  var_prefix="AOC_INPUT=${input_dir}"

  mkdir -p reports
  output="reports/bench-${padded}.md"

  export INPUT_DIR=$input_dir
  cmd=(
    $HYPERFINE
    -w 3
    -L fname $input_list
    --export-markdown "$output"
  )
  # get the list of "executables"
  mattcl_candidate=$(find mattcl -name "${padded}_*")
  nathanwang2_candidate=$(find nathanwang2 -maxdepth 1 -type d -name "day${i}")

  if [ ! -z $mattcl_candidate ]; then
    cmd+=("ci/scripts/run-example ${mattcl_candidate} {fname}")
  fi

  if [ ! -z $nathanwang2_candidate ]; then
    # for now, just run the example they have, but later we need to parametrize
    # but this requires work from the repo owner
    cmd+=("ci/scripts/run-nathanwang2-example ${nathanwang2_candidate} {fname}")
  fi

  echo "Benching day ${i}"
  "${cmd[@]}"

  echo "Cleaning output file"
  sed -i 's/ci\/scripts\/run.*-example //g' $output

  cp $output "modified-aoc-inputs/2021/day_${padded}/application-benches.md"

  i=`expr $i + 1`
done

# stupidly commit the latest report, because who needs an easy to view history?
cd modified-aoc-inputs
git config --global user.name "papercode ci"
git config --global user.email "matt@questionable.engineering"
git add .
if [ -z "$(git status --porcelain)" ]; then
  echo "Working directory clean"
else
  git commit -a -m "automated: update benchmark reports"
fi
