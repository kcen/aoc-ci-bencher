#!/bin/bash
set -e

CUR=$(pwd)
INPUTS="${CUR}/aoc-inputs-write/2021"
OUTPUTS="${CUR}/modified-aoc-inputs/2021"

git config --global user.name "papercode ci"
git config --global user.email "matt@questionable.engineering"

# make the working repo
git clone aoc-inputs-write modified-aoc-inputs

echo "unpacking examples"
tar -xvf examples/aoc2021-mattcl.tar.gz
mv aoc2021-mattcl mattcl

i=1
while [ $i -ne 26 ]
do
  padded=`printf %03d $i`
  input_dir="${INPUTS}/day_${padded}"
  export INPUT_DIR=$input_dir

  output_dir="${OUTPUTS}/day_${padded}"

  if [ ! -d "${input_dir}" ]; then
    echo "no inputs for day ${i}, breaking"
    break
  fi

  mapping="day_${padded}_mapping.md"

  example_prog=$(find mattcl -name "${padded}_*")
  if [ ! -z $example_prog ]; then
    cat > $mapping <<-EOF
# input -> solutions mapping
|input|part 1|part 2|
|:---|:---|:---|
EOF
    find "${input_dir}" -type f -name "*.tar.gz" -exec tar -xvf {} -C "${input_dir}" \; || true

    cmd+=("ci/scripts/run-example ${example_prog} {fname}")
    input_files=$(find "${input_dir}" -type f -regextype sed -regex ".*/.*input-[^.]*" -exec basename {} \;)

    for fname in $input_files
    do
      out=$(AOC_OUTPUT_JSON=1 ci/scripts/run-example $example_prog $fname | python ci/scripts/format_example_output.py)
      echo "|${fname}|${out}|" >> $mapping
    done
    cp $mapping "${output_dir}/solutions.md"
  else
    echo "no example for day ${i}"
  fi

  i=`expr $i + 1`
done

cd modified-aoc-inputs

git add .

if [ -z "$(git status --porcelain)" ]; then
  echo "Working directory clean"
else
  git commit -a -m "automated: update input-solution mappings"
fi
