#!/bin/sh
set -ex

git config --global user.name "papercode ci"
git config --global user.email "matt@questionable.engineering"

# make the working repo
git clone aoc-inputs modified-aoc-inputs
year=2022
readme="modified-aoc-inputs/${year}/README.md"

cat > $readme <<-EOF
# AoC ${year} aggregated inputs, solutions, and benchmarks

[ci pipeline](http://ci.papercode.net:8080/teams/aoc2022/pipelines/aoc-compare-2022)

## Participating repos

- [aspidites](https://github.com/aspidites/aoc2022)
- [kcen](https://github.com/kcen/AdventOfCode)
- [lanjian](https://github.com/LanJian/aoc-2022)
- [mattcl](https://github.com/mattcl/aoc2022)
- [pting](https://github.com/pting/aoc2022)
EOF

i=1
while [ $i -ne 26 ]
do
  padded=`printf %03d $i`
  target="modified-aoc-inputs/${year}/day_${padded}"
  mkdir -p $target

  # Find all of the relevant input files. This can't really be generic
  # since everyone sort of stores these in their own way

  # mattcl
  find "mattcl" -type d -name "day-${padded}*" -exec cp "{}/input.txt" "${target}/input-mattcl" \;

  # everyone else uses two digits
  padded=`printf %02d $i`

  # aspidites
  find "aspidites/inputs" -type f -name "${padded}.txt" -exec cp "{}" "${target}/input-aspidites" \;

  # lanjian
  find "lanjian/inputs" -type f -name "day_${padded}" -exec cp "{}" "${target}/input-lanjian" \;

  # pting
  find "pting" -type f -name "input${padded}.txt" -exec cp "{}" "${target}/input-pting" \;

  # kcen
  find "kcen/2022" -type d -name "${padded}" -exec cp "{}/input" "${target}/input-kcen" \;

  i=`expr $i + 1`
done

cd modified-aoc-inputs

git add .

if [ -z "$(git status --porcelain)" ]; then
  echo "Working directory clean"
else
  git commit -a -m "automated: updated inputs from sources"
fi
